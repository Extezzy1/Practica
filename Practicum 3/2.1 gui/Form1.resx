<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iXDBI/lzYBAAAAAASUVORK5CYII=
</value>
  </data>
</root>